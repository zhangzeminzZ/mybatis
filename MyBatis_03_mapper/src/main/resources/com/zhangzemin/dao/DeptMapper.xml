<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangzemin.dao.DeptMapper">
    <select id="getDeptById" resultType="com.zhangzemin.bean.Dept">
        select id,dept_name from tbl_dept where id = #{id}
    </select>

    <!--嵌套结果集的方式，使用collection标签定义关联的集合类型的属性封装规则  -->
    <resultMap id="MyDept" type="com.zhangzemin.bean.Dept">
        <id column="id" property="id"></id>
        <result column="dept_name" property="deptName"></result>
        <!--
			collection定义关联集合类型的属性的封装规则
			ofType:指定集合里面元素的类型
		-->
        <collection property="emps" ofType="com.zhangzemin.bean.Employee">
            <!-- 定义这个集合中元素的封装规则 -->
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>
    <!--Dept getDeptByIdPlus(Integer id);-->
    <select id="getDeptByIdPlus" resultMap="MyDept">
        SELECT
            d.id,
            d.dept_name,
            e.id eid,
            e.last_name,
            e.gender,
            e.email,
            e.d_id
        FROM
            tbl_dept d
            LEFT JOIN tbl_employee e ON d.id = e.d_id
        WHERE
            d.id = #{id};
    </select>

    <!-- collection：分段查询 -->
    <resultMap id="MyDeptStep" type="com.zhangzemin.bean.Dept">
        <id column="id" property="id"></id>
        <result column="dept_name" property="deptName"></result>
        <collection property="emps"
                    select="com.zhangzemin.dao.EmployeeMapperPlus.getEmpsByDeptId"
                    column="{deptId=id}" fetchType="lazy">
        </collection>
    </resultMap>
    <!--Dept getDeptByIdStep(Integer id);-->
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
        select id,dept_name from tbl_dept where id=#{id}
    </select>
    <!-- 扩展：
        多列的值传递过去：
	        将多列的值封装map传递；column="{key1=column1,key2=column2}"
		fetchType表示使用延迟加载:
			lazy：延迟
			eager：立即
	 -->
</mapper>